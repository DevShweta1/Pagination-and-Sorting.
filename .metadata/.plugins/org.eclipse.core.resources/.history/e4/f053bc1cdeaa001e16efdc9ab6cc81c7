package com.Demo.serviceImpl;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.Demo.entites.Test;
import com.Demo.repos.TestRepo;
import com.Demo.request.PageRequest;
import com.Demo.service.TestService;

@Service
public class TestServiceImpl implements TestService {

	@Autowired
	private TestRepo testRepo;

	@Override
	public List<Test> getAllTest() {
		return testRepo.findAll();
	}

	@Override
	public void saveTest(Test test) {
		this.testRepo.save(test);
	}

	@Override
	public Test getTestById(int id) {
		Optional<Test> optional = testRepo.findById(id);
		Test test = null;
		if (optional.isPresent()) {
			test = optional.get();
		} else {
			throw new RuntimeException("Test not found for id :: " + id);

		}
		return test;
	}

	@Override
	public void deleteTestById(int id) {
		this.testRepo.deleteById(id);

	}

	@Override
	public Page<Test> findPaginated(int page, int elementsPerPage) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ResponseEntity<Test> testGet(PageRequest pageRequest) {
		if (!pageRequest.getSortBy().equals("name") && !pageRequest.getSortBy().equals("id")
				&& !pageRequest.getSortBy().equals("Category") 
				&& !pageRequest.getSortBy().equals("Messages")
				&& !pageRequest.getSortBy().equals("Timestamp")
				&& !pageRequest.getSortBy().equals("Action")
				&& !pageRequest.getSortBy().equals("Status")) 
		{ 
			//throw new 
			///InvalidProperty(ConstantsMessage.VALID_PROPERTY_SORT_BY);
			
		}

		try {
			Page<Test> pageTest=null;
			Pageable p=PageRequest.of(pageRequest.getPageNumber(), pageRequest.getPageSize(),Sort.by(pageRequest.getSortBy()));
			if(PageRequest.getSearch()==null)		
			{
				pageTest = testRepo.findAll(p);	
			}
			else
			{
			pageTest = testRepo.search(pageRequest.getSearch(), p);
			}

	@Override
	public List<Test> findByFilter(Test test) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Page<Test> getByPageable(String test, Pageable pageable) {
		// TODO Auto-generated method stub
		return null;
	}
