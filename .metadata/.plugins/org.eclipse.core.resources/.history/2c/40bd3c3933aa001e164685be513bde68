package com.Demo.serviceImpl;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.data.domain.ExampleMatcher;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.Demo.entites.Test;
import com.Demo.repos.TestRepo;
import com.Demo.service.TestService;

@Service
public class TestServiceImpl implements TestService {

	@Autowired
	private TestRepo testRepo;

	@Override
	public List<Test> getAllTest() {
		return testRepo.findAll();
	}

	@Override
	public void saveTest(Test test) {
		this.testRepo.save(test);
	}

	@Override
	public Test getTestById(int id) {
		Optional<Test> optional = testRepo.findById(id);
		Test test = null;
		if (optional.isPresent()) {
			test = optional.get();
		} else {
			throw new RuntimeException("Test not found for id :: " + id);

		}
		return test;
	}

	@Override
	public void deleteTestById(int id) {
		this.testRepo.deleteById(id);

	}

	@Override
	public List<Test> findByFilter(Test test) {

		ExampleMatcher matcher = ExampleMatcher.matchingAny().withIgnoreCase()
				.withMatcher("firstName", ExampleMatcher.GenericPropertyMatchers.contains())
				.withMatcher("lastName", ExampleMatcher.GenericPropertyMatchers.contains())
				.withMatcher("district", ExampleMatcher.GenericPropertyMatchers.contains())
				.withMatcher("country", ExampleMatcher.GenericPropertyMatchers.contains())
				.withMatcher("city", ExampleMatcher.GenericPropertyMatchers.contains())
				.withMatcher("contact", ExampleMatcher.GenericPropertyMatchers.contains())
				.withMatcher("id", ExampleMatcher.GenericPropertyMatchers.contains());

		Example<Test> ex = Example.of(test, matcher);
		return this.testRepo.findAll(ex);
	}

	@Override
	public Page<Test> getByPageable(String test, Pageable pageable) {
		page<Test> test = this.testRepo.queryFirst3ByTest(test, pageable);
		return null;
	}
}
