package com.Demo.serviceImpl;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.Demo.entites.Test;
import com.Demo.repos.TestRepo;
import com.Demo.service.TestService;

@Service
public class TestServiceImpl implements TestService {

	@Autowired
	private TestRepo testRepo;

	@Override
	public List<Test> getAllTest() {
		return testRepo.findAll();
	}

	@Override
	public void saveTest(Test test) {
		this.testRepo.save(test);
	}

	@Override
	public Test getTestById(int id) {
		Optional<Test> optional = testRepo.findById(id);
		Test test = null;
		if (optional.isPresent()) {
			test = optional.get();
		} else {
			throw new RuntimeException("Test not found for id :: " + id);

		}
		return test;
	}

	@Override
	public void deleteTestById(int id) {
		this.testRepo.deleteById(id);

	}

	@Override
	public Page<Test> findPaginated(int page, int elementsPerPage) {
		// Calculate the offset based on the page number
        int offset = (page - 1) * elementsPerPage;

        // Retrieve the total count of elements
        long totalElements = testRepo.count();

        // Calculate the maximum number of elements for the current page
        int maxElements = Math.min(elementsPerPage, (int) (totalElements - offset));

        // Create a Pageable with the corrected offset and maximum number of elements
        Pageable pageable = PageRequest.of(page - 1, maxElements);

        // Retrieve and return the data for the specified page
        return testRepo.findAll(pageable);
    }
	}

}
